trigger:
- main

pool:
  vmImage: 'ubuntu-latest'  # Usamos un entorno de Linux para la compilación

variables:
  buildConfiguration: 'Release'
  packagePath: '$(Build.ArtifactStagingDirectory)/publish'
  zipFilePath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
  azureSubscription: 'serviceconnection-arp'  # Ajusta esto al nombre de tu suscripción en Azure
  appName: 'app-arp-linux-westeu-001'  # Ajusta esto al nombre de tu App Service

steps:
# Configuración de .NET SDK
- task: UseDotNet@2
  displayName: 'Instalar .NET SDK'
  inputs:
    packageType: 'sdk'
    version: '8.0.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# Restaurar paquetes NuGet
- task: DotNetCoreCLI@2
  displayName: 'Restaurar paquetes NuGet'
  inputs:
    command: 'restore'
    projects: '**/AzureResourceProbes.API.csproj'

# Compilar el proyecto
- task: DotNetCoreCLI@2
  displayName: 'Compilar el proyecto'
  inputs:
    command: 'build'
    projects: '**/AzureResourceProbes.API.csproj'
    arguments: '--configuration $(buildConfiguration)'

# Publicar la aplicación
- task: DotNetCoreCLI@2
  displayName: 'Publicar la aplicación'
  inputs:
    command: 'publish'
    projects: '**/AzureResourceProbes.API.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(packagePath)'

# Crear un archivo .zip a partir de la publicación
- task: ArchiveFiles@2
  displayName: 'Crear archivo ZIP de la publicación'
  inputs:
    rootFolderOrFile: '$(packagePath)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(zipFilePath)'
    replaceExistingArchive: true

# Publicar artefactos de compilación
- task: PublishBuildArtifacts@1
  displayName: 'Publicar artefactos de compilación'
  inputs:
    pathToPublish: '$(zipFilePath)'
    artifactName: 'drop'
    publishLocation: 'Container'

# Desplegar a Azure App Service
- task: AzureWebApp@1
  displayName: 'Desplegar aplicación en Azure App Service'
  inputs:
    azureSubscription: '$(azureSubscription)'  # Referencia al nombre de la suscripción en Azure DevOps
    appType: 'webAppLinux'
    appName: '$(appName)'
    package: '$(zipFilePath)'
    runtimeStack: 'DOTNET|8.0'
    enableCustomDeployment: true
