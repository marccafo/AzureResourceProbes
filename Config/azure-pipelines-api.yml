trigger:
- main

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'  # Usamos un agente Ubuntu para un entorno Linux

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/Src/AzureResourceProbes.API'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        projects: |
          $(workingDirectory)/*.csproj

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: |
          $(workingDirectory)/*.csproj
        arguments: --configuration Release

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: 'publish'
        projects: |
          $(workingDirectory)/*.csproj
        arguments: '--configuration Release --output $(System.DefaultWorkingDirectory)/publish_output'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'production'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy'
            inputs:
              connectedServiceNameARM: '$(azureSubscription)'
              appType: 'webAppLinux'
              appName: '$(appName)'  # Nombre del App Service
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'  # Paquete ZIP generado
              runtimeStack: 'DOTNET|8.0'  # Runtime Stack para .NET 8
              enableCustomDeployment: true
